sudo: required
services:
  - docker
cache:
  directories:
  # We cache the SDK so we don't have to download it again on subsequent builds.
  - $HOME/google-cloud-sdk
  
env:
  global:
  # Do not prompt for user input when using any SDK methods.
  - CLOUDSDK_CORE_DISABLE_PROMPTS=1 
  - GIT_SHA=$(git rev-parse HEAD)
before_install:
  - openssl aes-256-cbc -K $encrypted_9f3b5599b056_key -iv $encrypted_9f3b5599b056_iv -in service-account.json.enc -out service-account.json -d
  - if [ ! -d $HOME/google-cloud-sdk/bin ]; then rm -rf $HOME/google-cloud-sdk;curl https://sdk.cloud.google.com | bash > /dev/null; fi
# The install script errors if this directory already exists,
# but Travis already creates it when we mark it as cached.
# The install script is overly verbose, which sometimes causes
# problems on Travis, so ignore stdout.
# This line is critical. We setup the SDK to take precedence in our
# environment over the old SDK that is already on the machine.
  - source $HOME/google-cloud-sdk/path.bash.inc
  - gcloud components update kubectl
  - gcloud version
  - gcloud auth activate-service-account --key-file service-account.json
  - gcloud config set project steady-petal-307322
  - gcloud config set compute/zone us-central1-c
  - gcloud container clusters get-credentials multi-cluster
#login to docker cli
  - echo "$DOCKER_PASSWD" | docker login -u "$DOCKER_ID" --password-stdin
  - docker build -t stefaniadicu/react-test -f ./client/Dockerfile.dev ./client
script:
  - docker run -e CI=true stefaniadicu/react-test npm test
  
deploy:
  provider: script
  script: bash ./deploy.sh
  on:
    branch: master
